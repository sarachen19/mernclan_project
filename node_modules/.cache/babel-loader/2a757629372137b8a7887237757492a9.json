{"ast":null,"code":"'use strict';\n\nconst React = require('react');\n\nconst ReactIs = require('react-is'); // @ts-ignore remove when typed\n\n\nconst svg = require('property-information/svg'); // @ts-ignore remove when typed\n\n\nconst find = require('property-information/find'); // @ts-ignore remove when typed\n\n\nconst hastToReact = require('property-information/hast-to-react.json'); // @ts-ignore remove when typed\n\n\nconst spaces = require('space-separated-tokens'); // @ts-ignore remove when typed\n\n\nconst commas = require('comma-separated-tokens');\n\nconst style = require('style-to-object');\n\nexports.hastToReact = toReact;\nexports.hastChildrenToReact = childrenToReact;\n/**\n * @typedef {JSX.IntrinsicElements} IntrinsicElements\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n */\n\n/**\n * @typedef {Object} Info\n * @property {string?} space\n * @property {string?} attribute\n * @property {string?} property\n * @property {boolean} boolean\n * @property {boolean} booleanish\n * @property {boolean} overloadedBoolean\n * @property {boolean} number\n * @property {boolean} commaSeparated\n * @property {boolean} spaceSeparated\n * @property {boolean} commaOrSpaceSeparated\n * @property {boolean} mustUseProperty\n * @property {boolean} defined\n *\n * @typedef {Object} Schema\n * @property {Object.<string, Info>} property\n * @property {Object.<string, string>} normal\n * @property {string?} space\n *\n * @typedef {Object} Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef {Object} Context\n * @property {TransformOptions} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {keyof IntrinsicElements} ReactMarkdownNames\n *\n * @typedef {Object.<string, unknown>} ReactBaseProps\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {Object} ReactMarkdownProps\n * @property {Element} node\n * @property {string} key\n * @property {ReactNode[]} children\n * @property {Position?} [sourcePosition] Passed when `options.rawSourcePos` is given\n * @property {number} [index] Passed when `options.includeElementIndex` is given\n * @property {number} [siblingCount] Passed when `options.includeElementIndex` is given\n *\n * @callback NormalComponent\n * @param {ReactBaseProps & ReactMarkdownProps} props\n * @returns {ReactNode}\n *\n * @callback CodeComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {inline?: boolean}} props\n * @returns {ReactNode}\n *\n * @callback HeadingComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {level: number}} props\n * @returns {ReactNode}\n *\n * @callback LiComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} props\n * @returns {ReactNode}\n *\n * @callback OrderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: true}} props\n * @returns {ReactNode}\n *\n * @callback TableCellComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {style?: Object.<string, unknown>, isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback TableRowComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback UnorderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: false}} props\n * @returns {ReactNode}\n *\n * @typedef {Object} SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Record<Exclude<ReactMarkdownNames, keyof SpecialComponents>, NormalComponent|ReactMarkdownNames>} NormalComponents\n * @typedef {Partial<NormalComponents & SpecialComponents>} Components\n */\n\n/**\n * @typedef {Object} TransformOptions\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {string|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nconst own = {}.hasOwnProperty;\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\n\nfunction childrenToReact(context, node) {\n  /** @type {Array.<ReactNode>} */\n  const children = [];\n  let childIndex = -1;\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n\n  let child;\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex];\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node));\n    } else if (child.type === 'text') {\n      children.push(child.value);\n    } // @ts-ignore `raw` nodes are non-standard\n    else if (child.type === 'raw' && !context.options.skipHtml) {\n        // Default behavior is to show (encoded) HTML.\n        // @ts-ignore `raw` nodes are non-standard\n        children.push(child.value);\n      }\n  }\n\n  return children;\n}\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\n\n\nfunction toReact(context, node, index, parent) {\n  const options = context.options;\n  const parentSchema = context.schema;\n  /** @type {ReactMarkdownNames} */\n  // @ts-ignore assume a known HTML/SVG element.\n\n  const name = node.tagName;\n  /** @type {Object.<string, unknown>} */\n\n  const properties = {};\n  let schema = parentSchema;\n  /** @type {string} */\n\n  let property;\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg;\n    context.schema = schema;\n  }\n\n  for (property in node.properties) {\n    /* istanbul ignore else - prototype polution. */\n    if (own.call(node.properties, property)) {\n      addProperty(properties, property, node.properties[property], context);\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++;\n  }\n\n  const children = childrenToReact(context, node);\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--;\n  } // Restore parent schema.\n\n\n  context.schema = parentSchema; // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the positon interface.\n\n  const position = node.position || {\n    start: {\n      line: null,\n      column: null,\n      offset: null\n    },\n    end: {\n      line: null,\n      column: null,\n      offset: null\n    }\n  };\n  /** @type {NormalComponent|SpecialComponents[keyof SpecialComponents]|ReactMarkdownNames} */\n\n  const component = options.components && own.call(options.components, name) ? options.components[name] : name;\n  const basic = typeof component === 'string' || component === React.Fragment;\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(`Component for name \\`${name}\\` not defined or is not renderable`);\n  }\n\n  properties.key = [name, position.start.line, position.start.column, index].join('-');\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target = typeof options.linkTarget === 'function' ? // @ts-ignore assume `href` is a string\n    options.linkTarget(properties.href, node.children, properties.title) : options.linkTarget;\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri( // @ts-ignore assume `href` is a string\n    properties.href, node.children, properties.title);\n  }\n\n  if (!basic && name === 'code' && parent.tagName !== 'pre') {\n    properties.inline = true;\n  }\n\n  if (!basic && (name === 'h1' || name === 'h2' || name === 'h3' || name === 'h4' || name === 'h5' || name === 'h6')) {\n    properties.level = parseInt(name.charAt(1), 10);\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri( // @ts-ignore assume `src` is a string\n    properties.src, properties.alt, properties.title);\n  }\n\n  if (!basic && name === 'li') {\n    const input = getInputElement(node);\n    properties.checked = input ? Boolean(input.properties.checked) : null;\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.ordered = parent.tagName === 'ol';\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol';\n    properties.depth = context.listDepth;\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}; // @ts-ignore assume `style` is an object\n\n      properties.style.textAlign = properties.align;\n      delete properties.align;\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th';\n    }\n  }\n\n  if (!basic && name === 'tr') {\n    properties.isHeader = Boolean(parent.tagName === 'thead');\n  } // If `sourcePos` is given, pass source information (line/column info from markdown source).\n\n\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position);\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position;\n  } // If `includeElementIndex` is given, pass node index info to components.\n\n\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.siblingCount = getElementsBeforeCount(parent);\n  }\n\n  if (!basic) {\n    properties.node = node;\n  } // Ensure no React warnings are emitted for void elements w/ children.\n\n\n  return children.length > 0 ? React.createElement(component, properties, children) : React.createElement(component, properties);\n}\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\n\n\nfunction getInputElement(node) {\n  let index = -1;\n\n  while (++index < node.children.length) {\n    const child = node.children[index];\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\n\n\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1;\n  let count = 0;\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break;\n    if (parent.children[index].type === 'element') count++;\n  }\n\n  return count;\n}\n/**\n * @param {Object.<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\n\n\nfunction addProperty(props, prop, value, ctx) {\n  /** @type {Info} */\n  const info = find(ctx.schema, prop);\n  let result = value; // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n\n  if (result === null || result === undefined || result !== result) {\n    return;\n  } // Accept `array`.\n  // Most props are space-separated.\n\n\n  if (result && typeof result === 'object' && 'length' in result) {\n    // type-coverage:ignore-next-line remove when typed.\n    result = (info.commaSeparated ? commas : spaces).stringify(result);\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result);\n  }\n\n  if (info.space) {\n    props[own.call(hastToReact, info.property) ? hastToReact[info.property] : info.property] = result;\n  } else {\n    props[info.attribute] = result;\n  }\n}\n/**\n * @param {string} value\n * @returns {Object.<string, string>}\n */\n\n\nfunction parseStyle(value) {\n  /** @type {Object.<string, string>} */\n  const result = {};\n\n  try {\n    style(value, iterator);\n  } catch (\n  /** @type {Error} */\n  _) {// Silent.\n  }\n\n  return result;\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name;\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v;\n  }\n}\n/**\n * @param {unknown} _\n * @param {string} $1\n */\n\n\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase();\n}\n/**\n * @param {Position} pos\n * @returns {string}\n */\n\n\nfunction flattenPosition(pos) {\n  return [pos.start.line, ':', pos.start.column, '-', pos.end.line, ':', pos.end.column].map(d => String(d)).join('');\n}","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/node_modules/react-markdown/src/ast-to-react.js"],"names":["React","require","ReactIs","svg","find","hastToReact","spaces","commas","style","exports","toReact","hastChildrenToReact","childrenToReact","own","hasOwnProperty","context","node","children","childIndex","child","length","type","push","value","options","skipHtml","index","parent","parentSchema","schema","name","tagName","properties","property","space","call","addProperty","listDepth","position","start","line","column","offset","end","component","components","basic","Fragment","isValidElementType","TypeError","key","join","linkTarget","target","href","title","transformLinkUri","inline","level","parseInt","charAt","transformImageUri","src","alt","input","getInputElement","checked","Boolean","getElementsBeforeCount","ordered","depth","align","textAlign","isHeader","sourcePos","flattenPosition","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","props","prop","ctx","info","result","undefined","commaSeparated","stringify","parseStyle","attribute","iterator","_","v","k","slice","replace","styleReplacer","$1","toUpperCase","pos","map","d","String"],"mappings":"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","sourcesContent":["'use strict'\n\nconst React = require('react')\nconst ReactIs = require('react-is')\n// @ts-ignore remove when typed\nconst svg = require('property-information/svg')\n// @ts-ignore remove when typed\nconst find = require('property-information/find')\n// @ts-ignore remove when typed\nconst hastToReact = require('property-information/hast-to-react.json')\n// @ts-ignore remove when typed\nconst spaces = require('space-separated-tokens')\n// @ts-ignore remove when typed\nconst commas = require('comma-separated-tokens')\nconst style = require('style-to-object')\n\nexports.hastToReact = toReact\nexports.hastChildrenToReact = childrenToReact\n\n/**\n * @typedef {JSX.IntrinsicElements} IntrinsicElements\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n */\n\n/**\n * @typedef {Object} Info\n * @property {string?} space\n * @property {string?} attribute\n * @property {string?} property\n * @property {boolean} boolean\n * @property {boolean} booleanish\n * @property {boolean} overloadedBoolean\n * @property {boolean} number\n * @property {boolean} commaSeparated\n * @property {boolean} spaceSeparated\n * @property {boolean} commaOrSpaceSeparated\n * @property {boolean} mustUseProperty\n * @property {boolean} defined\n *\n * @typedef {Object} Schema\n * @property {Object.<string, Info>} property\n * @property {Object.<string, string>} normal\n * @property {string?} space\n *\n * @typedef {Object} Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef {Object} Context\n * @property {TransformOptions} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {keyof IntrinsicElements} ReactMarkdownNames\n *\n * @typedef {Object.<string, unknown>} ReactBaseProps\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {Object} ReactMarkdownProps\n * @property {Element} node\n * @property {string} key\n * @property {ReactNode[]} children\n * @property {Position?} [sourcePosition] Passed when `options.rawSourcePos` is given\n * @property {number} [index] Passed when `options.includeElementIndex` is given\n * @property {number} [siblingCount] Passed when `options.includeElementIndex` is given\n *\n * @callback NormalComponent\n * @param {ReactBaseProps & ReactMarkdownProps} props\n * @returns {ReactNode}\n *\n * @callback CodeComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {inline?: boolean}} props\n * @returns {ReactNode}\n *\n * @callback HeadingComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {level: number}} props\n * @returns {ReactNode}\n *\n * @callback LiComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} props\n * @returns {ReactNode}\n *\n * @callback OrderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: true}} props\n * @returns {ReactNode}\n *\n * @callback TableCellComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {style?: Object.<string, unknown>, isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback TableRowComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback UnorderedListComponent\n * @param {ReactBaseProps & ReactMarkdownProps & {depth: number, ordered: false}} props\n * @returns {ReactNode}\n *\n * @typedef {Object} SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Record<Exclude<ReactMarkdownNames, keyof SpecialComponents>, NormalComponent|ReactMarkdownNames>} NormalComponents\n * @typedef {Partial<NormalComponents & SpecialComponents>} Components\n */\n\n/**\n * @typedef {Object} TransformOptions\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {string|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nfunction childrenToReact(context, node) {\n  /** @type {Array.<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      children.push(child.value)\n    }\n    // @ts-ignore `raw` nodes are non-standard\n    else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      // @ts-ignore `raw` nodes are non-standard\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-ignore assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Object.<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  for (property in node.properties) {\n    /* istanbul ignore else - prototype polution. */\n    if (own.call(node.properties, property)) {\n      addProperty(properties, property, node.properties[property], context)\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the positon interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  /** @type {NormalComponent|SpecialComponents[keyof SpecialComponents]|ReactMarkdownNames} */\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? // @ts-ignore assume `href` is a string\n          options.linkTarget(properties.href, node.children, properties.title)\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      // @ts-ignore assume `href` is a string\n      properties.href,\n      node.children,\n      properties.title\n    )\n  }\n\n  if (!basic && name === 'code' && parent.tagName !== 'pre') {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      // @ts-ignore assume `src` is a string\n      properties.src,\n      properties.alt,\n      properties.title\n    )\n  }\n\n  if (!basic && name === 'li') {\n    const input = getInputElement(node)\n    properties.checked = input ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-ignore assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Object.<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  /** @type {Info} */\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (result && typeof result === 'object' && 'length' in result) {\n    // type-coverage:ignore-next-line remove when typed.\n    result = (info.commaSeparated ? commas : spaces).stringify(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Object.<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch (/** @type {Error} */ _) {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n"]},"metadata":{},"sourceType":"script"}