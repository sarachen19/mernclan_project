{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\TagsInput.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport '../components/TagsInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagsInput = props => {\n  _s();\n\n  const [tags, setTags] = useState([]);\n\n  const addTags = event => {\n    if (event.key === \"Enter\" && event.target.value !== \"\") {\n      setTags([...tags, event.target.value]);\n      props.selectedTags([...tags, event.target.value]);\n      event.target.value = \"\";\n    }\n  };\n\n  let sam = \"\";\n\n  const valueUpdate = () => {\n    if (props.activeNote.tagData) {\n      for (let i = 0; i < props.activeNote.tagData.length; i++) {\n        if (sam == \"\") {\n          sam = props.activeNote.tagData[i];\n        } else {\n          sam = sam + \",\" + props.activeNote.tagData[i];\n        }\n      }\n\n      console.log(\"Maharshi\" + sam);\n      const s = sam;\n      sam = \"\";\n      return s;\n    }\n  };\n\n  const removeTags = index => {\n    setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"tags\",\n        children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"tag\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag-title\",\n            children: tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag-close-icon\",\n            onClick: () => removeTags(index),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag-title\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyUp: event => event.key === \"Enter\" ? addTags(event) : null,\n          placeholder: \"Enter the tags\" // value={props.activeNote.tagData[0]}    \n          ,\n          value: valueUpdate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagsInput, \"IzCAJ4KNErqj8aZwPtBQzX1X3fk=\");\n\n_c = TagsInput;\nexport default TagsInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsInput\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/TagsInput.js"],"names":["React","useState","TagsInput","props","tags","setTags","addTags","event","key","target","value","selectedTags","sam","valueUpdate","activeNote","tagData","i","length","console","log","s","removeTags","index","filter","tag","indexOf","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport '../components/TagsInput.css';\r\n\r\n\r\nconst TagsInput = (props) => {\r\nconst [tags,setTags] = useState([]);\r\nconst addTags = event => {\r\n    if(event.key === \"Enter\" && event.target.value !== \"\"){\r\n        setTags([...tags,event.target.value]);\r\n        props.selectedTags([...tags, event.target.value]);\r\n        event.target.value = \"\";\r\n    }\r\n}\r\n\r\nlet sam =\"\";\r\nconst valueUpdate = () => {\r\nif(props.activeNote.tagData){\r\n  for(let i=0;i<props.activeNote.tagData.length;i++){\r\n    if(sam ==\"\"){\r\n      sam = props.activeNote.tagData[i];\r\n    }\r\n    else{\r\n      sam = sam+\",\"+props.activeNote.tagData[i]; \r\n    }\r\n     \r\n  }\r\n  console.log(\"Maharshi\"+sam);\r\n  const s = sam;\r\n  sam = \"\"\r\n  return s;\r\n}\r\n  }\r\n  \r\n\r\nconst removeTags = index => {\r\n    setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\r\n}\r\n\r\nreturn(\r\n    <div className=\"body\">\r\n       <div className=\"tags-input\">\r\n      <ul id=\"tags\">\r\n        {tags.map((tag, index) => (\r\n          <li key={index} className=\"tag\">\r\n            <span className='tag-title'>{tag}</span>\r\n            <span className='tag-close-icon'\r\n              onClick={() => removeTags(index)}\r\n            >\r\n              x\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"tag-title\">\r\n      <input\r\n        type=\"text\"\r\n        onKeyUp={event => event.key === \"Enter\" ? addTags(event) : null}\r\n        placeholder=\"Enter the tags\"\r\n       // value={props.activeNote.tagData[0]}    \r\n        value={valueUpdate()}\r\n      />\r\n      </div>\r\n    </div>\r\n    </div>\r\n);\r\n};\r\nexport default TagsInput;"]},"metadata":{},"sourceType":"module"}