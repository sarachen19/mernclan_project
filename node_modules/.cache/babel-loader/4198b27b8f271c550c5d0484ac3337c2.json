{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\taskComponents\\\\checklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { userState, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checklist = props => {\n  _s();\n\n  const [newChecklist, setnewChecklist] = useState({\n    //key: this.props.card.checklists.length,\n    checklistName: \"\",\n    todo: []\n  });\n  const [addChecklist, setaddChecklist] = useState(props.addChecklist || false);\n  const [newck, setnewck] = useState(\"Checklist\");\n\n  const ProgessBar = checklist => {\n    if (checklist.todo.length === 0) {\n      return null;\n    } else {\n      let count = 0;\n      let total = 0;\n      checklist.todo.forEach(todo => {\n        if (todo.finished === true) {\n          count++;\n        }\n\n        total++;\n      });\n      const percentage = parseInt(count / total * 100);\n      const width = percentage + \"%\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          height: \"10px\",\n          backgroundColor: \"#FEEFC1\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: width,\n            height: \"10px\",\n            backgroundColor: \"#f8ce4f\"\n          },\n          children: [percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  const handleAddChecklistSubmit = e => {\n    e.preventDefault();\n    setaddChecklist(false);\n    console.log(newck);\n    console.log(props.card.cardId);\n  };\n\n  const onChange2 = e => {\n    setnewck(e.target.value);\n  };\n\n  const toggleTodo = (e, checklist, oneTodo, todoIndex) => {\n    e.stopPropagation();\n  };\n\n  const Checklist2 = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"  \" + props.checklist.checklistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), ProgessBar(props.checklist), props.checklist.todo.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"todo-text-indent\",\n            style: {\n              textDecoration: todo.finished ? \"line-through\" : \"none\",\n              display: \"inline-block\"\n            },\n            onClick: e => toggleTodo(e, props.checklist, todo, index),\n            children: todo.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this);\n  };\n\n  if (addChecklist) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddChecklistSubmit,\n      id: \"addChecklistForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter checklist name\",\n        defaultValue: \"Checklist\",\n        onChange: e => onChange2(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this);\n  } else if (props.checklist !== undefined) {\n    return /*#__PURE__*/_jsxDEV(Checklist2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }, this);\n  }\n\n  return null;\n};\n\n_s(Checklist, \"00pOpAwPyQPbdpuFLRBg6qLrd0Q=\");\n\n_c = Checklist;\nexport default Checklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/taskComponents/checklist.js"],"names":["React","userState","useState","Checklist","props","newChecklist","setnewChecklist","checklistName","todo","addChecklist","setaddChecklist","newck","setnewck","ProgessBar","checklist","length","count","total","forEach","finished","percentage","parseInt","width","height","backgroundColor","handleAddChecklistSubmit","e","preventDefault","console","log","card","cardId","onChange2","target","value","toggleTodo","oneTodo","todoIndex","stopPropagation","Checklist2","map","index","textDecoration","display","text","undefined"],"mappings":"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","sourcesContent":["import React, { userState, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst Checklist = (props) => {\r\n\tconst [newChecklist, setnewChecklist] = useState({\r\n\t\t//key: this.props.card.checklists.length,\r\n\t\tchecklistName: \"\",\r\n\t\ttodo: [],\r\n\t});\r\n\tconst [addChecklist, setaddChecklist] = useState(props.addChecklist || false);\r\n\tconst [newck, setnewck] = useState(\"Checklist\");\r\n\tconst ProgessBar = (checklist) => {\r\n\t\tif (checklist.todo.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tlet count = 0;\r\n\t\t\tlet total = 0;\r\n\t\t\tchecklist.todo.forEach((todo) => {\r\n\t\t\t\tif (todo.finished === true) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t\ttotal++;\r\n\t\t\t});\r\n\t\t\tconst percentage = parseInt((count / total) * 100);\r\n\t\t\tconst width = percentage + \"%\";\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"progress\"\r\n\t\t\t\t\tstyle={{ height: \"10px\", backgroundColor: \"#FEEFC1\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"progress-bar\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: \"10px\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"#f8ce4f\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{percentage}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\tconst handleAddChecklistSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetaddChecklist(false);\r\n\t\tconsole.log(newck);\r\n\t\tconsole.log(props.card.cardId);\r\n\t};\r\n\tconst onChange2 = (e) => {\r\n\t\tsetnewck(e.target.value);\r\n\t};\r\n\tconst toggleTodo = (e, checklist, oneTodo, todoIndex) => {\r\n\t\te.stopPropagation();\r\n\t};\r\n\r\n\tconst Checklist2 = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<span className=\"dot\"></span>\r\n\t\t\t\t\t<p>{\"  \" + props.checklist.checklistName}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{ProgessBar(props.checklist)}\r\n\t\t\t\t{props.checklist.todo.map((todo, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tclassName=\"todo-text-indent\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttextDecoration: todo.finished ? \"line-through\" : \"none\",\r\n\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tonClick={(e) => toggleTodo(e, props.checklist, todo, index)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{todo.text}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tif (addChecklist) {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={handleAddChecklistSubmit} id=\"addChecklistForm\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"enter checklist name\"\r\n\t\t\t\t\tdefaultValue=\"Checklist\"\r\n\t\t\t\t\tonChange={(e) => onChange2(e)}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn btn-success btn-sm\" type=\"submit\">\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t} else if (props.checklist !== undefined) {\r\n\t\treturn <Checklist2 />;\r\n\t}\r\n\treturn null;\r\n};\r\nexport default Checklist;\r\n"]},"metadata":{},"sourceType":"module"}