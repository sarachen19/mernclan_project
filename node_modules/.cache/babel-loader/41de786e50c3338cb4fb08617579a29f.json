{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\JobApplication.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TableView from './TableView';\nimport apiService from './apiService';\nimport { apiCallURLS, API_Types_Enum } from \"./DataConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobApplication = () => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [jobApplications, setApplications] = useState([]);\n  const tableHeaders = [{\n    organization: \"Organization Name\"\n  }, {\n    date: \"Date Of Application\"\n  }];\n  useEffect(() => {\n    apiService(apiCallURLS.jobApplications, null, API_Types_Enum.get_with_auth, response => setApplications(response[\"data\"]), err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Previous Job Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableView, {\n      datalist: jobApplications,\n      tableHeaders: tableHeaders,\n      addEditApplicationUrl: '/job-application/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobApplication, \"U5M2BwaTGkxUrlnxSwtHbrCktYc=\");\n\n_c = JobApplication;\nexport default JobApplication;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobApplication\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/JobApplication.js"],"names":["React","useState","useEffect","TableView","apiService","apiCallURLS","API_Types_Enum","JobApplication","files","setFiles","jobApplications","setApplications","tableHeaders","organization","date","get_with_auth","response","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,iBAA5C;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,eAAD,EAAkBC,eAAlB,IAAqCV,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMW,YAAY,GAAG,CAAC;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAAD,EAAwC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAxC,CAArB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,UAAU,CAACC,WAAW,CAACK,eAAb,EACN,IADM,EAENJ,cAAc,CAACS,aAFT,EAGLC,QAAD,IAAcL,eAAe,CAACK,QAAQ,CAAC,MAAD,CAAT,CAHvB,EAILC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJH,CAAV;AAKH,GANQ,EAMN,EANM,CAAT;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEP,eAArB;AAAsC,MAAA,YAAY,EAAEE,YAApD;AAAkE,MAAA,qBAAqB,EAAE;AAAzF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBD;;GAAML,c;;KAAAA,c;AAoBN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TableView from './TableView';\r\nimport apiService from './apiService';\r\nimport { apiCallURLS, API_Types_Enum } from \"./DataConstants\";\r\n\r\nconst JobApplication = () => {\r\n    const [files, setFiles] = useState([]);\r\n    const [jobApplications, setApplications] = useState([]);\r\n    const tableHeaders = [{ organization: \"Organization Name\" }, { date: \"Date Of Application\" }];\r\n\r\n    useEffect(() => {\r\n        apiService(apiCallURLS.jobApplications,\r\n            null,\r\n            API_Types_Enum.get_with_auth,\r\n            (response) => setApplications(response[\"data\"]),\r\n            (err) => console.log(err));\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Previous Job Applications</h4>\r\n            <TableView datalist={jobApplications} tableHeaders={tableHeaders} addEditApplicationUrl={'/job-application/'} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default JobApplication;"]},"metadata":{},"sourceType":"module"}