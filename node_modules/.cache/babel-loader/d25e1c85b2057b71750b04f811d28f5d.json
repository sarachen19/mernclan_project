{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\JobApplication.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FileUpload from './FileUpload';\nimport FileView from './FileViewer';\nimport TableView from './TableView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobApplication = () => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [jobApplications, setApplications] = useState([{\n    organizationName: \"Humber\",\n    date: \"28-Feb-2021\"\n  }, {\n    organizationName: \"Google\",\n    date: \"28-Feb-2021\"\n  }, {\n    organizationName: \"Microsoft\",\n    date: \"28-Feb-2021\"\n  }]);\n  const tableHeaders = [\"Organization Name\", \"Date Of Application\"];\n  useEffect(() => {\n    fetch('./sample.pdf').then(data => {\n      setFiles([{\n        name: data,\n        type: \"pdf\"\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      fileChangeHandler: e => {\n        setFiles(e.target.files);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Previous Job Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableView, {\n      datalist: jobApplications,\n      tableHeaders: tableHeaders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"File Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), files[0] ? /*#__PURE__*/_jsxDEV(FileView, {\n      filePath: files[0].name,\n      fileType: files[0].type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobApplication, \"hkQ/RrIS18GO6wr92n/sTeMH+3A=\");\n\n_c = JobApplication;\nexport default JobApplication;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobApplication\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/JobApplication.js"],"names":["React","useState","useEffect","FileUpload","FileView","TableView","JobApplication","files","setFiles","jobApplications","setApplications","organizationName","date","tableHeaders","fetch","then","data","name","type","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,eAAD,EAAkBC,eAAlB,IAAqCT,QAAQ,CAAC,CAChD;AAAEU,IAAAA,gBAAgB,EAAE,QAApB;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GADgD,EAEhD;AAAED,IAAAA,gBAAgB,EAAE,QAApB;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GAFgD,EAGhD;AAAED,IAAAA,gBAAgB,EAAE,WAApB;AAAiCC,IAAAA,IAAI,EAAE;AAAvC,GAHgD,CAAD,CAAnD;AAKA,QAAMC,YAAY,GAAC,CAAC,mBAAD,EAAqB,qBAArB,CAAnB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAC,cAAD,CAAL,CACKC,IADL,CACWC,IAAI,IAAI;AACXR,MAAAA,QAAQ,CAAC,CAAC;AAAES,QAAAA,IAAI,EAAED,IAAR;AAAcE,QAAAA,IAAI,EAAE;AAApB,OAAD,CAAD,CAAR;AACH,KAHL;AAIH,GALQ,EAKN,EALM,CAAT;AAMA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,iBAAiB,EAAGC,CAAD,IAAO;AAAEX,QAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASb,KAAV,CAAR;AAA0B;AAAlE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEE,eAArB;AAAsC,MAAA,YAAY,EAAEI;AAApD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EASKN,KAAK,CAAC,CAAD,CAAL,gBAAW,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEA,KAAK,CAAC,CAAD,CAAL,CAASU,IAA7B;AAAmC,MAAA,QAAQ,EAAEV,KAAK,CAAC,CAAD,CAAL,CAASW;AAAtD;AAAA;AAAA;AAAA;AAAA,YAAX,GAA4E,IATjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5BD;;GAAMZ,c;;KAAAA,c;AA8BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FileUpload from './FileUpload';\r\nimport FileView from './FileViewer';\r\nimport TableView from './TableView';\r\n\r\nconst JobApplication = () => {\r\n    const [files, setFiles] = useState([]);\r\n    const [jobApplications, setApplications] = useState([\r\n        { organizationName: \"Humber\", date: \"28-Feb-2021\" },\r\n        { organizationName: \"Google\", date: \"28-Feb-2021\" },\r\n        { organizationName: \"Microsoft\", date: \"28-Feb-2021\" }\r\n    ]);\r\n    const tableHeaders=[\"Organization Name\",\"Date Of Application\"];\r\n\r\n    useEffect(() => {\r\n        fetch('./sample.pdf')\r\n            .then((data => {\r\n                setFiles([{ name: data, type: \"pdf\" }]);\r\n            }));\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Upload file</h4>\r\n            <FileUpload fileChangeHandler={(e) => { setFiles(e.target.files) }} />\r\n            <hr />\r\n            <h4>Previous Job Applications</h4>\r\n            <TableView datalist={jobApplications} tableHeaders={tableHeaders} />\r\n            <hr />\r\n            <h4>File Viewer</h4>\r\n            {/* {files[0].name ? <FileView filePath={files[0].name} fileType={files[0].type.split('/')[1]} /> : null} */}\r\n            {files[0] ? <FileView filePath={files[0].name} fileType={files[0].type} /> : null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default JobApplication;"]},"metadata":{},"sourceType":"module"}