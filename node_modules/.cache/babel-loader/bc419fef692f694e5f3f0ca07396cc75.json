{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\jobApplication\\\\AddEditJobApplications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FileUpload from '../FileUpload';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport FileView from '../FileViewer';\nimport apiService from '../apiService';\nimport { apiCallURLS, API_Types_Enum } from \"../DataConstants\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditJobApplications = () => {\n  _s();\n\n  // const [files, setFiles] = useState([]);\n  const [fileProgress, setFileProgress] = useState(0);\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [job, setJob] = useState({\n    organizationName: \"\",\n    dateOfApplication: new Date(19010101),\n    documents: []\n  });\n  useEffect(() => {\n    if (id !== '0') {\n      apiService(apiCallURLS.jobApplications + '/' + id, null, API_Types_Enum.get_with_auth, response => {\n        var transformedDate = new Date(response[\"data\"].date);\n        setJob({\n          \"organizationName\": response[\"data\"].organization,\n          \"dateOfApplication\": transformedDate,\n          documents: response[\"data\"].attachment\n        });\n        setViewer(response[\"data\"].attachment[0].name);\n      }, err => console.log(err));\n    }\n  }, [id]);\n\n  function validateForm() {\n    return true; //job.documents.length > 0 && job.organizationName.length > 0 && job.dateOfApplication.length > 0;\n  }\n\n  function setViewer(url) {\n    let frame = document.getElementById('iframe');\n\n    if (frame == null) {\n      var doc = document.createElement('iframe');\n      doc.setAttribute(\"id\", \"iframe\");\n      doc.frameBorder = 0;\n      doc.width = 400;\n      doc.height = 400;\n      doc.src = url;\n      document.getElementById('pdfView').appendChild(doc);\n    } else {\n      frame.src = url;\n    }\n  }\n\n  function uploadFiles(e) {\n    var file = e.target.files[0];\n    var storageRef = firebase.storage().ref(file.name);\n    storageRef.put(file).on(\"state_changed\", snapshot => {\n      const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setFileProgress(prog);\n    }, error => {\n      console.log(error);\n    }, () => {\n      storageRef.getDownloadURL().then(url => {\n        setViewer(url);\n        setJob({ ...job,\n          documents: [{\n            \"name\": url,\n            \"type\": file.type\n          }]\n        }); //setFiles([{ \"name\": url, \"type\": file.type }]);\n      });\n    });\n  }\n\n  function handleSubmit(event) {\n    if (id === '0') {\n      apiService(apiCallURLS.jobApplications, {\n        organization: job.organizationName,\n        date: job.dateOfApplication,\n        attachment: job.documents\n      }, API_Types_Enum.post_with_auth, () => history.push('/job-application'), err => console.log(err));\n    } else {\n      apiService(apiCallURLS.jobApplications, {\n        id: id,\n        organization: job.organizationName,\n        date: job.dateOfApplication,\n        attachment: job.documents\n      }, API_Types_Enum.put_with_auth, () => history.push('/job-application'), err => console.log(err));\n    }\n\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"organizationName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Organization Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"organizationName\",\n          value: job.organizationName,\n          onChange: e => setJob({ ...job,\n            organizationName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"dateOfApplication\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date of application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: job.dateOfApplication,\n          defaultValue: job.dateOfApplication,\n          onChange: e => setJob({ ...job,\n            dateOfApplication: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Upload file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), fileProgress !== 100 ? /*#__PURE__*/_jsxDEV(ProgressBar, {\n        animated: true,\n        now: fileProgress,\n        label: `${fileProgress}%`,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(FileUpload, {\n        fileChangeHandler: uploadFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pdfView\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        onClick: () => {\n          history.push('/job-application');\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddEditJobApplications, \"y42NllTGOo3sLUq/0Y70vSxTgNg=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddEditJobApplications;\nexport default AddEditJobApplications;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditJobApplications\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/jobApplication/AddEditJobApplications.js"],"names":["React","useState","useEffect","useHistory","useParams","Form","Button","FileUpload","ProgressBar","FileView","apiService","apiCallURLS","API_Types_Enum","firebase","AddEditJobApplications","fileProgress","setFileProgress","id","history","job","setJob","organizationName","dateOfApplication","Date","documents","jobApplications","get_with_auth","response","transformedDate","date","organization","attachment","setViewer","name","err","console","log","validateForm","url","frame","document","getElementById","doc","createElement","setAttribute","frameBorder","width","height","src","appendChild","uploadFiles","e","file","target","files","storageRef","storage","ref","put","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","error","getDownloadURL","then","type","handleSubmit","event","post_with_auth","push","put_with_auth","preventDefault","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FileUpload from '../FileUpload';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport FileView from '../FileViewer';\r\nimport apiService from '../apiService';\r\nimport { apiCallURLS, API_Types_Enum } from \"../DataConstants\";\r\nimport firebase from \"firebase\";\r\n\r\nconst AddEditJobApplications = () => {\r\n    // const [files, setFiles] = useState([]);\r\n    const [fileProgress, setFileProgress] = useState(0);\r\n\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const [job, setJob] = useState({ organizationName: \"\", dateOfApplication: new Date(19010101), documents: [] });\r\n    useEffect(() => {\r\n        if (id !== '0') {\r\n            apiService(apiCallURLS.jobApplications + '/' + id,\r\n                null,\r\n                API_Types_Enum.get_with_auth,\r\n                (response) => {\r\n                    var transformedDate = new Date(response[\"data\"].date);\r\n                    setJob({ \"organizationName\": response[\"data\"].organization, \"dateOfApplication\": transformedDate, documents: response[\"data\"].attachment });\r\n                    setViewer(response[\"data\"].attachment[0].name);\r\n                },\r\n                (err) => console.log(err));\r\n        }\r\n    }, [id]);\r\n\r\n    function validateForm() {\r\n        return true;//job.documents.length > 0 && job.organizationName.length > 0 && job.dateOfApplication.length > 0;\r\n    }\r\n\r\n    function setViewer(url) {\r\n        let frame = document.getElementById('iframe');\r\n        if (frame == null) {\r\n            var doc = document.createElement('iframe');\r\n            doc.setAttribute(\"id\", \"iframe\");\r\n            doc.frameBorder = 0;\r\n            doc.width = 400;\r\n            doc.height = 400;\r\n            doc.src = url;\r\n            document.getElementById('pdfView').appendChild(doc);\r\n        } else {\r\n            frame.src = url;\r\n        }\r\n    }\r\n\r\n    function uploadFiles(e) {\r\n        var file = e.target.files[0];\r\n        var storageRef = firebase.storage().ref(file.name);\r\n        storageRef.put(file).on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                const prog = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                setFileProgress(prog);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storageRef.getDownloadURL().then(url => {\r\n                    setViewer(url);\r\n                    setJob({ ...job, documents: [{ \"name\": url, \"type\": file.type }] });\r\n                    //setFiles([{ \"name\": url, \"type\": file.type }]);\r\n                });\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        if (id === '0') {\r\n            apiService(apiCallURLS.jobApplications,\r\n                {\r\n                    organization: job.organizationName,\r\n                    date: job.dateOfApplication,\r\n                    attachment: job.documents\r\n                },\r\n                API_Types_Enum.post_with_auth,\r\n                () => history.push('/job-application'),\r\n                (err) => console.log(err));\r\n        } else {\r\n            apiService(apiCallURLS.jobApplications,\r\n                {\r\n                    id: id,\r\n                    organization: job.organizationName,\r\n                    date: job.dateOfApplication,\r\n                    attachment: job.documents\r\n                },\r\n                API_Types_Enum.put_with_auth,\r\n                () => history.push('/job-application'),\r\n                (err) => console.log(err));\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Job</h4>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"organizationName\">\r\n                    <Form.Label>Organization Name</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"organizationName\"\r\n                        value={job.organizationName}\r\n                        onChange={(e) => setJob({ ...job, organizationName: e.target.value })}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"dateOfApplication\">\r\n                    <Form.Label>Date of application</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        value={job.dateOfApplication}\r\n                        defaultValue={job.dateOfApplication}\r\n                        onChange={(e) => setJob({ ...job, dateOfApplication: e.target.value })}\r\n                    />\r\n                </Form.Group>\r\n                {/* <Form.Group size=\"lg\" controlId=\"documents\">\r\n                    <Form.Label>Attachments</Form.Label>\r\n                    <Form.Control\r\n                        type=\"documents\"\r\n                        value={job.documents}\r\n                        onChange={(e) => setJob({ ...job, documents: e.target.value })}\r\n                    />\r\n                </Form.Group> */}\r\n                <h4>Upload file</h4>\r\n                {fileProgress !== 100 ? <ProgressBar animated now={fileProgress} label={`${fileProgress}%`} max=\"100\" /> : null}\r\n                <FileUpload fileChangeHandler={uploadFiles} />\r\n                <hr />\r\n                <div id=\"pdfView\"></div>\r\n                <Button size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    Save\r\n                </Button>\r\n                <Button size=\"lg\" onClick={() => { history.push('/job-application'); }}>\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n\r\n            {/* {files[0] ?\r\n                <React.Fragment>\r\n                    <h4>File Viewer</h4>\r\n                    <FileView filePath={files[0].name} fileType={files[0].type.split('/')[1]} />\r\n                </React.Fragment>\r\n                : null} */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddEditJobApplications;"]},"metadata":{},"sourceType":"module"}