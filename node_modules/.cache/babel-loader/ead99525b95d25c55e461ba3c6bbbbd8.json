{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\taskComponents\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Validators from \"./validators\";\nimport Label from \"./label\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignLeft, faEdit, faEraser, faTrash, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [add, setadd] = useState(false || props.add);\n  const [showAddButton, setshowAddButton] = useState(false);\n  const [currentCard, setcurrentCard] = useState(\"\");\n  const [newCard, setnewCard] = useState({\n    value: \"\",\n    checklists: [],\n    labels: [],\n    dueDate: \"\",\n    description: \"\",\n    comments: [],\n    cover: \"\",\n    attachment: \"\",\n    groupKey: props.group.key\n  });\n\n  const handleAddChange = event => {\n    //update newCard\n    if (Validators.isEmpty(event.target.value) === false) {\n      setnewCard({\n        value: event.target.value,\n        checklists: [],\n        labels: [],\n        dueDate: \"\",\n        description: \"\",\n        comments: [],\n        cover: \"\",\n        attachment: \"\",\n        groupKey: props.group.key\n      });\n      setshowAddButton(true);\n    }\n  };\n\n  const handleAddSubmit = event => {\n    //add newCard into cards and update cards in Group\n    event.preventDefault();\n\n    if (Validators.isEmpty(event.target.firstElementChild.value) === false) {\n      //props.group.cards.push(newCard);\n      setnewCard({\n        value: \"\",\n        checklists: [],\n        labels: [],\n        dueDate: \"\",\n        description: \"\",\n        comments: [],\n        cover: \"\",\n        attachment: \"\",\n        groupKey: \"\"\n      });\n      setshowAddButton(false);\n      props.onCardsChange(props.group, newCard);\n    }\n  };\n\n  if (add) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!showAddButton && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"addcardtxt\",\n      onClick: () => {\n        setshowAddButton(true);\n      },\n      children: \"+ Add another card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this), showAddButton && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter card name\",\n        onChange: handleAddChange,\n        defaultValue: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-sm\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);else return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      onClick: () => popupEdit(props.card),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: coverRef,\n        style: coverStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        onMouseOver: e => showOptionIcons(e, \"visible\"),\n        onMouseOut: e => showOptionIcons(e, \"hidden\"),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-cardname\",\n          children: props.card.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-icons-hide\",\n          \"data-toggle\": \"tooltip\",\n          \"data-html\": \"true\",\n          title: props.card.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-icons-hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this), props.card.checklists.map((checklist, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"checklist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false) // {props.card.checklists.map((checklist, index) => {\n  // \treturn <p key={index}>checklist</p>;\n  // })}\n  ;\n};\n\n_s(Card, \"f+bUXrPI6Dz4Sair/Ck/PwiMnK4=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/taskComponents/Card.js"],"names":["React","useState","Validators","Label","FontAwesomeIcon","faAlignLeft","faEdit","faEraser","faTrash","faWindowClose","Card","props","add","setadd","showAddButton","setshowAddButton","currentCard","setcurrentCard","newCard","setnewCard","value","checklists","labels","dueDate","description","comments","cover","attachment","groupKey","group","key","handleAddChange","event","isEmpty","target","handleAddSubmit","preventDefault","firstElementChild","onCardsChange","style","popupEdit","card","coverRef","coverStyle","e","showOptionIcons","map","checklist","index"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\r\nimport Validators from \"./validators\";\r\nimport Label from \"./label\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaAlignLeft,\r\n\tfaEdit,\r\n\tfaEraser,\r\n\tfaTrash,\r\n\tfaWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Card = (props) => {\r\n\tconst [add, setadd] = useState(false || props.add);\r\n\tconst [showAddButton, setshowAddButton] = useState(false);\r\n\tconst [currentCard, setcurrentCard] = useState(\"\");\r\n\tconst [newCard, setnewCard] = useState({\r\n\t\tvalue: \"\",\r\n\t\tchecklists: [],\r\n\t\tlabels: [],\r\n\t\tdueDate: \"\",\r\n\t\tdescription: \"\",\r\n\t\tcomments: [],\r\n\t\tcover: \"\",\r\n\t\tattachment: \"\",\r\n\t\tgroupKey: props.group.key,\r\n\t});\r\n\r\n\tconst handleAddChange = (event) => {\r\n\t\t//update newCard\r\n\t\tif (Validators.isEmpty(event.target.value) === false) {\r\n\t\t\tsetnewCard({\r\n\t\t\t\tvalue: event.target.value,\r\n\t\t\t\tchecklists: [],\r\n\t\t\t\tlabels: [],\r\n\t\t\t\tdueDate: \"\",\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\tcomments: [],\r\n\t\t\t\tcover: \"\",\r\n\t\t\t\tattachment: \"\",\r\n\t\t\t\tgroupKey: props.group.key,\r\n\t\t\t});\r\n\t\t\tsetshowAddButton(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleAddSubmit = (event) => {\r\n\t\t//add newCard into cards and update cards in Group\r\n\t\tevent.preventDefault();\r\n\t\tif (Validators.isEmpty(event.target.firstElementChild.value) === false) {\r\n\t\t\t//props.group.cards.push(newCard);\r\n\t\t\tsetnewCard({\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tchecklists: [],\r\n\t\t\t\tlabels: [],\r\n\t\t\t\tdueDate: \"\",\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\tcomments: [],\r\n\t\t\t\tcover: \"\",\r\n\t\t\t\tattachment: \"\",\r\n\t\t\t\tgroupKey: \"\",\r\n\t\t\t});\r\n\t\t\tsetshowAddButton(false);\r\n\t\t\tprops.onCardsChange(props.group, newCard);\r\n\t\t}\r\n\t};\r\n\tif (add)\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{!showAddButton && (\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tclassName=\"addcardtxt\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetshowAddButton(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#43; Add another card\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t\t{showAddButton && (\r\n\t\t\t\t\t<form onSubmit={handleAddSubmit}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter card name\"\r\n\t\t\t\t\t\t\tonChange={handleAddChange}\r\n\t\t\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-success btn-sm\">\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\telse\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div style={style} onClick={() => popupEdit(props.card)}>\r\n\t\t\t\t\t<p ref={coverRef} style={coverStyle}></p>\r\n\t\t\t\t\t{/* <Label smallLabel={true} card={props.card} /> */}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"d-flex\"\r\n\t\t\t\t\t\tonMouseOver={(e) => showOptionIcons(e, \"visible\")}\r\n\t\t\t\t\t\tonMouseOut={(e) => showOptionIcons(e, \"hidden\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p className=\"card-cardname\">{props.card.value}</p>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"card-icons-hide\"\r\n\t\t\t\t\t\t\tdata-toggle=\"tooltip\"\r\n\t\t\t\t\t\t\tdata-html=\"true\"\r\n\t\t\t\t\t\t\ttitle={props.card.description}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* <FontAwesomeIcon icon={faAlignLeft} /> */}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"card-icons-hide\">\r\n\t\t\t\t\t\t\t{/* <FontAwesomeIcon icon={faEdit} onClick={showEditPane} /> */}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{props.card.checklists.map((checklist, index) => {\r\n\t\t\t\t\t\treturn <p>checklist</p>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\r\n\t\t\t// {props.card.checklists.map((checklist, index) => {\r\n\t\t\t// \treturn <p key={index}>checklist</p>;\r\n\t\t\t// })}\r\n\t\t);\r\n};\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}