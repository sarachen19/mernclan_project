{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\taskComponents\\\\checklist.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Checklist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newChecklist: {\n        //key: this.props.card.checklists.length,\n        checklistName: \"\",\n        todo: []\n      },\n      addChecklist: this.props.addChecklist || false\n    };\n    this.handleAddChecklistSubmit = this.handleAddChecklistSubmit.bind(this);\n    this.AddChecklist = this.AddChecklist.bind(this);\n    this.checklistInput = /*#__PURE__*/React.createRef();\n    this.Checklist = this.Checklist.bind(this);\n  }\n\n  ProgessBar(checklist) {\n    if (checklist.todo.length === 0) {\n      return null;\n    } else {\n      let count = 0;\n      let total = 0;\n      checklist.todo.forEach(todo => {\n        if (todo.finished === true) {\n          count++;\n        }\n\n        total++;\n      });\n      const percentage = parseInt(count / total * 100);\n      const width = percentage + \"%\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          height: \"10px\",\n          backgroundColor: \"#FEEFC1\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: width,\n            height: \"10px\",\n            backgroundColor: \"#f8ce4f\"\n          },\n          children: [percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n  handleAddChecklistSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      addChecklist: false\n    });\n    const checklistName = this.checklistInput.current.value;\n    const tempChecklist = this.state.newChecklist;\n    tempChecklist.checklistName = checklistName;\n    this.setState({\n      newChecklist: tempChecklist\n    });\n    this.props.card.checklists = [...this.props.card.checklists, this.state.newChecklist];\n    this.props.onAddChecklists(); //增加结束 修改 EditCard - addChecklist state to false\n\n    this.props.onCardsChange();\n  }\n\n  AddChecklist() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleAddChecklistSubmit,\n      id: \"addChecklistForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter checklist name\",\n        ref: this.checklistInput,\n        defaultValue: \"Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this);\n  }\n\n  toggleTodo(e, checklist, oneTodo, todoIndex) {\n    e.stopPropagation();\n    checklist.todo.forEach((value, index) => {\n      if (index === todoIndex) {\n        value.finished = !value.finished;\n      }\n    });\n    this.props.onCardsChange();\n  }\n\n  Checklist() {\n    const checklist = this.props.checklist;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"  \" + checklist.checklistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), this.ProgessBar(this.props.checklist), checklist.todo.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"todo-text-indent\",\n            style: {\n              textDecoration: todo.finished ? \"line-through\" : \"none\",\n              display: \"inline-block\"\n            },\n            onClick: e => this.toggleTodo(e, checklist, todo, index),\n            children: todo.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this);\n  }\n\n  render() {\n    if (this.state.addChecklist) {\n      return /*#__PURE__*/_jsxDEV(this.AddChecklist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this);\n    } else if (this.props.checklist !== undefined) {\n      const Checklist = this.Checklist;\n      return /*#__PURE__*/_jsxDEV(Checklist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)\n      /*\r\n      <div className=\"d-flex-row justify-content-right\">\r\n      \t<p className=\"mr-auto\">{this.props.checklist.checklistName}</p>\r\n      \t{this.ProgessBar(this.props.checklist)}\r\n      </div>\r\n      */\n      ;\n    } else return null; //return this.state.addChecklist && <this.AddChecklist />;\n\n  }\n\n}\n\nexport default Checklist;","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/taskComponents/checklist.js"],"names":["React","Component","Checklist","constructor","props","state","newChecklist","checklistName","todo","addChecklist","handleAddChecklistSubmit","bind","AddChecklist","checklistInput","createRef","ProgessBar","checklist","length","count","total","forEach","finished","percentage","parseInt","width","height","backgroundColor","e","preventDefault","setState","current","value","tempChecklist","card","checklists","onAddChecklists","onCardsChange","toggleTodo","oneTodo","todoIndex","stopPropagation","index","map","textDecoration","display","text","render","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nclass Checklist extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tnewChecklist: {\r\n\t\t\t\t//key: this.props.card.checklists.length,\r\n\t\t\t\tchecklistName: \"\",\r\n\t\t\t\ttodo: [],\r\n\t\t\t},\r\n\t\t\taddChecklist: this.props.addChecklist || false,\r\n\t\t};\r\n\t\tthis.handleAddChecklistSubmit = this.handleAddChecklistSubmit.bind(this);\r\n\t\tthis.AddChecklist = this.AddChecklist.bind(this);\r\n\t\tthis.checklistInput = React.createRef();\r\n\t\tthis.Checklist = this.Checklist.bind(this);\r\n\t}\r\n\tProgessBar(checklist) {\r\n\t\tif (checklist.todo.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tlet count = 0;\r\n\t\t\tlet total = 0;\r\n\t\t\tchecklist.todo.forEach((todo) => {\r\n\t\t\t\tif (todo.finished === true) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t\ttotal++;\r\n\t\t\t});\r\n\t\t\tconst percentage = parseInt((count / total) * 100);\r\n\t\t\tconst width = percentage + \"%\";\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"progress\"\r\n\t\t\t\t\tstyle={{ height: \"10px\", backgroundColor: \"#FEEFC1\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"progress-bar\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: \"10px\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"#f8ce4f\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{percentage}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\thandleAddChecklistSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ addChecklist: false });\r\n\t\tconst checklistName = this.checklistInput.current.value;\r\n\t\tconst tempChecklist = this.state.newChecklist;\r\n\t\ttempChecklist.checklistName = checklistName;\r\n\t\tthis.setState({ newChecklist: tempChecklist });\r\n\t\tthis.props.card.checklists = [\r\n\t\t\t...this.props.card.checklists,\r\n\t\t\tthis.state.newChecklist,\r\n\t\t];\r\n\t\tthis.props.onAddChecklists(); //增加结束 修改 EditCard - addChecklist state to false\r\n\t\tthis.props.onCardsChange();\r\n\t}\r\n\r\n\tAddChecklist() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleAddChecklistSubmit} id=\"addChecklistForm\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"enter checklist name\"\r\n\t\t\t\t\tref={this.checklistInput}\r\n\t\t\t\t\tdefaultValue=\"Checklist\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn btn-success btn-sm\" type=\"submit\">\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n\ttoggleTodo(e, checklist, oneTodo, todoIndex) {\r\n\t\te.stopPropagation();\r\n\t\tchecklist.todo.forEach((value, index) => {\r\n\t\t\tif (index === todoIndex) {\r\n\t\t\t\tvalue.finished = !value.finished;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.props.onCardsChange();\r\n\t}\r\n\r\n\tChecklist() {\r\n\t\tconst checklist = this.props.checklist;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<span className=\"dot\"></span>\r\n\t\t\t\t\t<p>{\"  \" + checklist.checklistName}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.ProgessBar(this.props.checklist)}\r\n\t\t\t\t{checklist.todo.map((todo, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tclassName=\"todo-text-indent\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttextDecoration: todo.finished ? \"line-through\" : \"none\",\r\n\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tonClick={(e) => this.toggleTodo(e, checklist, todo, index)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{todo.text}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.addChecklist) {\r\n\t\t\treturn <this.AddChecklist />;\r\n\t\t} else if (this.props.checklist !== undefined) {\r\n\t\t\tconst Checklist = this.Checklist;\r\n\t\t\treturn (\r\n\t\t\t\t<Checklist />\r\n\t\t\t\t/*\r\n\t\t\t\t<div className=\"d-flex-row justify-content-right\">\r\n\t\t\t\t\t<p className=\"mr-auto\">{this.props.checklist.checklistName}</p>\r\n\t\t\t\t\t{this.ProgessBar(this.props.checklist)}\r\n\t\t\t\t</div>\r\n\t\t\t\t*/\r\n\t\t\t);\r\n\t\t} else return null;\r\n\t\t//return this.state.addChecklist && <this.AddChecklist />;\r\n\t}\r\n}\r\nexport default Checklist;\r\n"]},"metadata":{},"sourceType":"module"}