{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport decode from 'jwt-decode';\nimport { useHistory } from \"react-router-dom\";\nimport apiService from './apiService';\nimport { API_Types_Enum } from \"./DataConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string().required('No password provided.').min(8, 'Password is too short - should be 8 chars minimum.')\n    }),\n    onSubmit: async values => {\n      setIsLoading(true);\n      apiService(\"/api/users\", {\n        name: values.name,\n        email: values.email,\n        password: values.password\n      }, API_Types_Enum.post, response => {\n        sessionStorage.setItem(\"token\", response.data['token']);\n        let decodeduser = decode(response.data.token);\n        console.log(decodeduser);\n        setIsLoading(false);\n        setError(null);\n        history.push('/home');\n      }, err => {\n        setIsLoading(false);\n        setError(err.response.data);\n      }); // alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info regLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"text\",\n          name: \"name\",\n          onChange: formik.handleChange,\n          value: formik.values.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 1\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          name: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 1\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 1\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger regLabel\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"qNVmneGTep21Gj6gFS3wwn2OiGA=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/Register.js"],"names":["React","useState","useFormik","Yup","Form","Button","decode","useHistory","apiService","API_Types_Enum","Register","history","isLoading","setIsLoading","error","setError","formik","initialValues","name","email","password","validationSchema","object","string","required","min","onSubmit","values","post","response","sessionStorage","setItem","data","decodeduser","token","console","log","push","err","handleSubmit","handleChange","touched","errors"],"mappings":"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","sourcesContent":["import React,{ useState } from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Login.css\";\r\nimport decode from 'jwt-decode';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport apiService from './apiService';\r\nimport { API_Types_Enum } from \"./DataConstants\";\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const formik = useFormik({\r\n\r\n    initialValues: {\r\n\r\n      name: '',\r\n\r\n      email: '',\r\n\r\n      password: '',\r\n\r\n    },\r\n    validationSchema: Yup.object({\r\n\r\n      name: Yup.string()\r\n\r\n        .required('Required'),\r\n\r\n    \r\n\r\n      email: Yup.string().email('Invalid email address').required('Required'),\r\n      password: Yup.string()\r\n      .required('No password provided.') \r\n      .min(8, 'Password is too short - should be 8 chars minimum.'),\r\n\r\n    }),\r\n    onSubmit: async(values) => {\r\n      setIsLoading(true);\r\n      apiService(\"/api/users\",\r\n        {\r\n          name: values.name,\r\n        email: values.email,\r\n        password: values.password\r\n        },\r\n        API_Types_Enum.post,\r\n        (response) => {\r\n          sessionStorage.setItem(\"token\", response.data['token']);\r\n       \r\n        let decodeduser = decode(response.data.token);\r\n       console.log(decodeduser);\r\n        setIsLoading(false);\r\n        setError(null);\r\n        history.push('/home');\r\n        },\r\n        (err) => {\r\n          setIsLoading(false);\r\n      \r\n        setError(err.response.data);\r\n        });\r\n\r\n\r\n      \r\n    // alert(JSON.stringify(values, null, 2));\r\n\r\n    },\r\n\r\n  });\r\n \r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      {isLoading && <div className=\"alert alert-info regLabel\"><strong>Loading...</strong></div>}\r\n      \r\n      <Form onSubmit={formik.handleSubmit}>\r\n      <Form.Group size=\"lg\" controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            name='name'\r\n            onChange={formik.handleChange}\r\n         value={formik.values.name}\r\n          />\r\n          {formik.touched.name && formik.errors.name ? (\r\n\r\n<div className=\"error-msg\">{formik.errors.name}</div>\r\n\r\n) : null}\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            name='email'\r\n            onChange={formik.handleChange}\r\n         value={formik.values.email}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n\r\n<div className=\"error-msg\">{formik.errors.email}</div>\r\n\r\n) : null}\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name='password'\r\n           \r\n            \r\n            onChange={formik.handleChange}\r\n         value={formik.values.password}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n\r\n<div className=\"error-msg\">{formik.errors.password}</div>\r\n\r\n) : null}\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      {error && <div className=\"alert alert-danger regLabel\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}