{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\jobApplication\\\\AddEditJobApplications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FileUpload from '../FileUpload';\nimport FileView from '../FileViewer';\nimport apiService from '../apiService';\nimport { apiCallURLS, API_Types_Enum } from \"../DataConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditJobApplications = () => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [job, setJob] = useState({\n    organizationName: \"\",\n    dateOfApplication: new Date(19010101),\n    documents: []\n  });\n  useEffect(() => {\n    if (id !== '0') {\n      apiService(apiCallURLS.jobApplications + '/' + id, null, API_Types_Enum.get_with_auth, response => setJob({\n        \"organizationName\": response[\"data\"].organization,\n        \"dateOfApplication\": response[\"data\"].date,\n        documents: response[\"data\"].attachment\n      }), err => console.log(err));\n    }\n  }, [id]);\n\n  function validateForm() {\n    return true; //job.documents.length > 0 && job.organizationName.length > 0 && job.dateOfApplication.length > 0;\n  }\n\n  function handleSubmit(event) {\n    if (id === '0') {\n      apiService(apiCallURLS.jobApplications, {\n        organization: job.organizationName,\n        date: job.dateOfApplication,\n        attachment: job.documents\n      }, API_Types_Enum.post_with_auth, () => history.push('/job-application'), err => console.log(err));\n    } else {\n      apiService(apiCallURLS.jobApplications, {\n        id: id,\n        organization: job.organizationName,\n        date: job.dateOfApplication,\n        attachment: job.documents\n      }, API_Types_Enum.put_with_auth, () => history.push('/job-application'), err => console.log(err));\n    }\n\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"organizationName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Organization Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"organizationName\",\n          value: job.organizationName,\n          onChange: e => setJob({ ...job,\n            organizationName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"dateOfApplication\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date of applcation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"dateOfApplication\",\n          value: job.dateOfApplication,\n          onChange: e => setJob({ ...job,\n            dateOfApplication: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"documents\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Attachments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"documents\",\n          value: job.documents,\n          onChange: e => setJob({ ...job,\n            documents: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        onClick: () => {\n          history.push('/job-application');\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      fileChangeHandler: e => {\n        setFiles(e.target.files);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"File Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), files[0] ? /*#__PURE__*/_jsxDEV(FileView, {\n      filePath: files[0].name,\n      fileType: files[0].type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddEditJobApplications, \"6gcrTqjRh7P57wqvpBYeYpEX1tw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AddEditJobApplications;\nexport default AddEditJobApplications;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditJobApplications\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/jobApplication/AddEditJobApplications.js"],"names":["React","useState","useEffect","useHistory","useParams","Form","Button","FileUpload","FileView","apiService","apiCallURLS","API_Types_Enum","AddEditJobApplications","files","setFiles","id","history","job","setJob","organizationName","dateOfApplication","Date","documents","jobApplications","get_with_auth","response","organization","date","attachment","err","console","log","validateForm","handleSubmit","event","post_with_auth","push","put_with_auth","preventDefault","e","target","value","name","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAI;AAAEc,IAAAA;AAAF,MAASX,SAAS,EAAtB;AACA,MAAIY,OAAO,GAAGb,UAAU,EAAxB;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC;AAAEkB,IAAAA,gBAAgB,EAAE,EAApB;AAAwBC,IAAAA,iBAAiB,EAAE,IAAIC,IAAJ,CAAS,QAAT,CAA3C;AAA+DC,IAAAA,SAAS,EAAE;AAA1E,GAAD,CAA9B;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,EAAE,KAAK,GAAX,EAAgB;AACZN,MAAAA,UAAU,CAACC,WAAW,CAACa,eAAZ,GAA8B,GAA9B,GAAoCR,EAArC,EACN,IADM,EAENJ,cAAc,CAACa,aAFT,EAGLC,QAAD,IAAcP,MAAM,CAAC;AAAE,4BAAoBO,QAAQ,CAAC,MAAD,CAAR,CAAiBC,YAAvC;AAAqD,6BAAqBD,QAAQ,CAAC,MAAD,CAAR,CAAiBE,IAA3F;AAAiGL,QAAAA,SAAS,EAAEG,QAAQ,CAAC,MAAD,CAAR,CAAiBG;AAA7H,OAAD,CAHd,EAILC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJH,CAAV;AAKH;AACJ,GARQ,EAQN,CAACd,EAAD,CARM,CAAT;;AAUA,WAASiB,YAAT,GAAwB;AACpB,WAAO,IAAP,CADoB,CACR;AACf;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAInB,EAAE,KAAK,GAAX,EAAgB;AACZN,MAAAA,UAAU,CAACC,WAAW,CAACa,eAAb,EACN;AACIG,QAAAA,YAAY,EAAET,GAAG,CAACE,gBADtB;AAEIQ,QAAAA,IAAI,EAAEV,GAAG,CAACG,iBAFd;AAGIQ,QAAAA,UAAU,EAAEX,GAAG,CAACK;AAHpB,OADM,EAMNX,cAAc,CAACwB,cANT,EAON,MAAMnB,OAAO,CAACoB,IAAR,CAAa,kBAAb,CAPA,EAQLP,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARH,CAAV;AASH,KAVD,MAUO;AACHpB,MAAAA,UAAU,CAACC,WAAW,CAACa,eAAb,EACN;AACIR,QAAAA,EAAE,EAAEA,EADR;AAEIW,QAAAA,YAAY,EAAET,GAAG,CAACE,gBAFtB;AAGIQ,QAAAA,IAAI,EAAEV,GAAG,CAACG,iBAHd;AAIIQ,QAAAA,UAAU,EAAEX,GAAG,CAACK;AAJpB,OADM,EAONX,cAAc,CAAC0B,aAPT,EAQN,MAAMrB,OAAO,CAACoB,IAAR,CAAa,kBAAb,CARA,EASLP,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATH,CAAV;AAUH;;AACDK,IAAAA,KAAK,CAACI,cAAN;AACH;;AAED,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEL,YAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,IAAjB;AAAsB,QAAA,SAAS,EAAC,kBAAhC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,SAAS,MADb;AAEI,UAAA,IAAI,EAAC,kBAFT;AAGI,UAAA,KAAK,EAAEhB,GAAG,CAACE,gBAHf;AAII,UAAA,QAAQ,EAAGoB,CAAD,IAAOrB,MAAM,CAAC,EAAE,GAAGD,GAAL;AAAUE,YAAAA,gBAAgB,EAAEoB,CAAC,CAACC,MAAF,CAASC;AAArC,WAAD;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,IAAjB;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,mBADT;AAEI,UAAA,KAAK,EAAExB,GAAG,CAACG,iBAFf;AAGI,UAAA,QAAQ,EAAGmB,CAAD,IAAOrB,MAAM,CAAC,EAAE,GAAGD,GAAL;AAAUG,YAAAA,iBAAiB,EAAEmB,CAAC,CAACC,MAAF,CAASC;AAAtC,WAAD;AAH3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAkBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,IAAjB;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,WADT;AAEI,UAAA,KAAK,EAAExB,GAAG,CAACK,SAFf;AAGI,UAAA,QAAQ,EAAGiB,CAAD,IAAOrB,MAAM,CAAC,EAAE,GAAGD,GAAL;AAAUK,YAAAA,SAAS,EAAEiB,CAAC,CAACC,MAAF,CAASC;AAA9B,WAAD;AAH3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA0BI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,IAAI,EAAC,QAAvB;AAAgC,QAAA,QAAQ,EAAE,CAACT,YAAY,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ,eA6BI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,EAAE,MAAM;AAAEhB,UAAAA,OAAO,CAACoB,IAAR,CAAa,kBAAb;AAAmC,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCJ,eAoCI,QAAC,UAAD;AAAY,MAAA,iBAAiB,EAAGG,CAAD,IAAO;AAAEzB,QAAAA,QAAQ,CAACyB,CAAC,CAACC,MAAF,CAAS3B,KAAV,CAAR;AAA0B;AAAlE;AAAA;AAAA;AAAA;AAAA,YApCJ,eAqCI;AAAA;AAAA;AAAA;AAAA,YArCJ,eAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCJ,EAuCKA,KAAK,CAAC,CAAD,CAAL,gBAAW,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEA,KAAK,CAAC,CAAD,CAAL,CAAS6B,IAA7B;AAAmC,MAAA,QAAQ,EAAE7B,KAAK,CAAC,CAAD,CAAL,CAAS8B;AAAtD;AAAA;AAAA;AAAA;AAAA,YAAX,GAA4E,IAvCjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CAzFD;;GAAM/B,sB;UAGWR,S,EACCD,U;;;KAJZS,sB;AA2FN,eAAeA,sBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FileUpload from '../FileUpload';\r\nimport FileView from '../FileViewer';\r\nimport apiService from '../apiService';\r\nimport { apiCallURLS, API_Types_Enum } from \"../DataConstants\";\r\n\r\nconst AddEditJobApplications = () => {\r\n    const [files, setFiles] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const [job, setJob] = useState({ organizationName: \"\", dateOfApplication: new Date(19010101), documents: [] });\r\n    useEffect(() => {\r\n        if (id !== '0') {\r\n            apiService(apiCallURLS.jobApplications + '/' + id,\r\n                null,\r\n                API_Types_Enum.get_with_auth,\r\n                (response) => setJob({ \"organizationName\": response[\"data\"].organization, \"dateOfApplication\": response[\"data\"].date, documents: response[\"data\"].attachment }),\r\n                (err) => console.log(err));\r\n        }\r\n    }, [id]);\r\n\r\n    function validateForm() {\r\n        return true;//job.documents.length > 0 && job.organizationName.length > 0 && job.dateOfApplication.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        if (id === '0') {\r\n            apiService(apiCallURLS.jobApplications,\r\n                {\r\n                    organization: job.organizationName,\r\n                    date: job.dateOfApplication,\r\n                    attachment: job.documents\r\n                },\r\n                API_Types_Enum.post_with_auth,\r\n                () => history.push('/job-application'),\r\n                (err) => console.log(err));\r\n        } else {\r\n            apiService(apiCallURLS.jobApplications,\r\n                {\r\n                    id: id,\r\n                    organization: job.organizationName,\r\n                    date: job.dateOfApplication,\r\n                    attachment: job.documents\r\n                },\r\n                API_Types_Enum.put_with_auth,\r\n                () => history.push('/job-application'),\r\n                (err) => console.log(err));\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Job</h4>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"organizationName\">\r\n                    <Form.Label>Organization Name</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"organizationName\"\r\n                        value={job.organizationName}\r\n                        onChange={(e) => setJob({ ...job, organizationName: e.target.value })}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"dateOfApplication\">\r\n                    <Form.Label>Date of applcation</Form.Label>\r\n                    <Form.Control\r\n                        type=\"dateOfApplication\"\r\n                        value={job.dateOfApplication}\r\n                        onChange={(e) => setJob({ ...job, dateOfApplication: e.target.value })}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"documents\">\r\n                    <Form.Label>Attachments</Form.Label>\r\n                    <Form.Control\r\n                        type=\"documents\"\r\n                        value={job.documents}\r\n                        onChange={(e) => setJob({ ...job, documents: e.target.value })}\r\n                    />\r\n                </Form.Group>\r\n                <Button size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    Save\r\n                </Button>\r\n                <Button size=\"lg\" onClick={() => { history.push('/job-application'); }}>\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n            <h4>Upload file</h4>\r\n            <FileUpload fileChangeHandler={(e) => { setFiles(e.target.files) }} />\r\n            <hr />\r\n            <h4>File Viewer</h4>\r\n            {files[0] ? <FileView filePath={files[0].name} fileType={files[0].type} /> : null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddEditJobApplications;"]},"metadata":{},"sourceType":"module"}