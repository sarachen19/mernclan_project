{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\ImageSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SliderData } from '../components/SliderData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageSlider = ({\n  slides\n}) => {\n  _s();\n\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n  const [index, setIndex] = React.useState(0);\n  const delay = 2500;\n  const timeoutRef = React.useRef(null);\n  React.useEffect(() => {\n    const resetTimeOut = () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n\n    resetTimeOut();\n    timeoutRef.current = setTimeout(() => setIndex(prevIndex => prevIndex === SliderData.length - 1 ? 0 : prevIndex + 1), delay);\n    return () => {\n      resetTimeOut();\n    };\n  }, [index]);\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"slider\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FaArrowAltCircleLeft, {\n        className: \"left-arrow\",\n        onClick: prevSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FaArrowAltCircleRight, {\n        className: \"right-arrow\",\n        onClick: nextSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), SliderData.map((slide, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === current ? 'slideActive' : 'slide',\n          children: index === current && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: slide.image,\n            alt: \"note images\",\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 46\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageSlider, \"6OEB0TI7A6N3otjmcw/BDqblZ9E=\");\n\n_c = ImageSlider;\nexport default ImageSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/ImageSlider.js"],"names":["React","useState","SliderData","FaArrowAltCircleRight","FaArrowAltCircleLeft","ImageSlider","slides","current","setCurrent","length","index","setIndex","delay","timeoutRef","useRef","useEffect","resetTimeOut","clearTimeout","setTimeout","prevIndex","nextSlide","prevSlide","Array","isArray","map","slide","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAAQC,qBAAR,EAA8BC,oBAA9B,QAAyD,gBAAzD;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACpB;AAAA;;AACI,QAAK,CAACC,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMQ,MAAM,GAAGH,MAAM,CAACG,MAAtB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACC,QAAN,CAAe,CAAf,CAA1B;AACA,QAAMW,KAAK,GAAG,IAAd;AACA,QAAMC,UAAU,GAAGb,KAAK,CAACc,MAAN,CAAa,IAAb,CAAnB;AAIAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,UAAMC,YAAY,GAAG,MAAM;AACvB,UAAIH,UAAU,CAACN,OAAf,EAAwB;AACpBU,QAAAA,YAAY,CAACJ,UAAU,CAACN,OAAZ,CAAZ;AACH;AACJ,KAJD;;AAMAS,IAAAA,YAAY;AACZH,IAAAA,UAAU,CAACN,OAAX,GAAqBW,UAAU,CAC7B,MACEP,QAAQ,CAAEQ,SAAD,IACPA,SAAS,KAAKjB,UAAU,CAACO,MAAX,GAAoB,CAAlC,GAAsC,CAAtC,GAA0CU,SAAS,GAAG,CADhD,CAFmB,EAK7BP,KAL6B,CAA/B;AAQA,WAAO,MAAM;AACTI,MAAAA,YAAY;AACf,KAFD;AAGD,GAnBD,EAmBG,CAACN,KAAD,CAnBH;;AAsBA,QAAMU,SAAS,GAAE,MACjB;AACIZ,IAAAA,UAAU,CAACD,OAAO,KAAKE,MAAM,GAAC,CAAnB,GAAuB,CAAvB,GAA2BF,OAAO,GAAE,CAArC,CAAV;AACH,GAHD;;AAKA,QAAMc,SAAS,GAAE,MACjB;AACIb,IAAAA,UAAU,CAACD,OAAO,KAAM,CAAb,GAAiBE,MAAM,GAAC,CAAxB,GAA0BF,OAAO,GAAC,CAAnC,CAAV;AACH,GAHD;;AAKA,MAAG,CAACe,KAAK,CAACC,OAAN,CAAcjB,MAAd,CAAD,IAAyBA,MAAM,CAACG,MAAP,IAAgB,CAA5C,EAA8C;AAC1C,WAAO,IAAP;AACH;;AACD,sBACI;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,2BACF;AAAA,8BACI,QAAC,oBAAD;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAEY;AAAtD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,qBAAD;AAAuB,QAAA,SAAS,EAAC,aAAjC;AAA+C,QAAA,OAAO,EAAED;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGOlB,UAAU,CAACsB,GAAX,CAAe,CAACC,KAAD,EAAOf,KAAP,KAAiB;AAC7B,4BACI;AAAK,UAAA,SAAS,EAAEA,KAAK,KAAKH,OAAV,GAAoB,aAApB,GAAoC,OAApD;AAAA,oBACKG,KAAK,KAAGH,OAAR,iBAAoB;AAAK,YAAA,GAAG,EAAGkB,KAAK,CAACC,KAAjB;AAAwB,YAAA,GAAG,EAAC,aAA5B;AAA0C,YAAA,SAAS,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADzB,WAAkEhB,KAAlE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAhED;;GAAML,W;;KAAAA,W;AAkEN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { SliderData } from '../components/SliderData';\r\n\r\nimport {FaArrowAltCircleRight,FaArrowAltCircleLeft} from 'react-icons/fa';\r\n\r\nconst ImageSlider = ({slides}) =>\r\n{\r\n    const[current,setCurrent] = useState(0);\r\n    const length = slides.length;\r\n    \r\n    const [index, setIndex] = React.useState(0);\r\n    const delay = 2500;\r\n    const timeoutRef = React.useRef(null);\r\n\r\n \r\n\r\n    React.useEffect(() => {\r\n      const resetTimeOut = () => {\r\n          if (timeoutRef.current) {\r\n              clearTimeout(timeoutRef.current);\r\n          }\r\n      }\r\n  \r\n      resetTimeOut();\r\n      timeoutRef.current = setTimeout(\r\n        () =>\r\n          setIndex((prevIndex) =>\r\n            prevIndex === SliderData.length - 1 ? 0 : prevIndex + 1\r\n          ),\r\n        delay\r\n      );\r\n  \r\n      return () => {\r\n          resetTimeOut();\r\n      };\r\n    }, [index]);\r\n\r\n\r\n    const nextSlide =() =>\r\n    {\r\n        setCurrent(current === length-1 ? 0 : current +1);\r\n    }\r\n\r\n    const prevSlide =() =>\r\n    {\r\n        setCurrent(current ===  0 ? length-1:current-1);\r\n    }\r\n\r\n    if(!Array.isArray(slides)|| slides.length <=0){\r\n        return null;\r\n    }\r\n    return(\r\n        <section className=\"slider\">\r\n      <div>\r\n          <FaArrowAltCircleLeft className=\"left-arrow\" onClick={prevSlide}/>\r\n          <FaArrowAltCircleRight className=\"right-arrow\" onClick={nextSlide}/>\r\n            {SliderData.map((slide,index) => {\r\n                return(\r\n                    <div className={index === current ? 'slideActive' : 'slide'} key={index}>\r\n                        {index===current && (<img src ={slide.image} alt=\"note images\" className=\"image\"/>)}\r\n                \r\n                </div>\r\n                )\r\n             \r\n\r\n            })}\r\n       </div>\r\n       </section>\r\n    );\r\n};\r\n\r\nexport default ImageSlider;"]},"metadata":{},"sourceType":"module"}