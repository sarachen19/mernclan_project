{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cxr72\\\\Documents\\\\github\\\\meanStack dev\\\\project-client-the-mern-clan\\\\src\\\\components\\\\Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../Note.css';\nimport NoteSidebar from './NoteSidebar';\nimport NoteContent from './NoteContent';\nimport uuid from 'react-uuid';\nimport axios from 'axios';\nimport apiService from './apiService';\nimport { API_Types_Enum } from \"./DataConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [test, setTest] = useState([]);\n  useEffect(() => {\n    // apiService(\"https://mern-clan.herokuapp.com/api/note\",\n    //   null,\n    //   API_Types_Enum.get,\n    //   (response) => { response.data.sort((a, b) => new Date(a) < new Date(b) ? 1 : -1);\n    //     setNotes(response.data);\n    //     setTest(response.data);},\n    //   (err) => console.log(err));\n    axios.get('https://mern-clan.herokuapp.com/api/note').then(response => {\n      response.data.sort((a, b) => new Date(a) < new Date(b) ? 1 : -1);\n      setNotes(response.data);\n      setTest(response.data);\n      console.log(response);\n    }); // fetch('https://jsonplaceholder.typicode.com/posts')\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setPosts(data);\n    //     console.log(data);\n    //   });\n  }, []);\n  const [activeNote, setActiveNote] = useState(false);\n  const [textDisabled, setTextDisabled] = useState(true);\n\n  const onAddNote = () => {\n    const newNote = {\n      _id: uuid(),\n      title: \"Title\",\n      description: \"description\",\n      date: Date.now(),\n      tagData: [null]\n    };\n    setNotes([newNote, ...notes]); //setTest([newNote,...test]);\n\n    console.log(\"Pranay1 printing notes.id\" + notes._id);\n    console.log(\"Pranay1 printing notes.id\" + notes.title);\n    console.log(\"Pranay1 printing notes.id\" + notes.date);\n    console.log(\"Pranay1 printing notes.id\" + notes.description);\n  };\n\n  const onDeleteNote = async noteId => {\n    console.log(\"Sandeep12 printing id\" + noteId); //setNotes(notes.filter((eachNote) => eachNote.id!== note.id ));\n\n    let token = sessionStorage.getItem('token');\n    console.log(\"Sandeep printing\" + token);\n    let config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': token\n      },\n      data: {\n        id: noteId\n      }\n    };\n    console.log(\"Sandeep1234 printing id\" + noteId);\n\n    try {\n      const response = await axios.delete('https://mern-clan.herokuapp.com/api/note', config);\n      localStorage.setItem('token', token);\n      console.log(response);\n    } catch (e) {\n      console.log('error ', e);\n    }\n\n    axios.get('https://mern-clan.herokuapp.com/api/note').then(response => {\n      response.data.sort((a, b) => new Date(a) < new Date(b) ? 1 : -1);\n      setNotes(response.data);\n    });\n  };\n\n  const onEditNote = editedNote => {\n    const updatedNotesArray = notes.map(note => {\n      if (note._id === editedNote._id) {\n        return editedNote;\n      }\n\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n\n  const getActiveNote = () => {\n    console.log(\"Sandeep\" + activeNote);\n    const r = notes.find(note => note._id === activeNote);\n    console.log(\"Sandeep rabba\" + r);\n    return r;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-8 mx-auto text-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Create a note!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note\",\n      children: [/*#__PURE__*/_jsxDEV(NoteSidebar, {\n        notes: notes,\n        onAddNote: onAddNote,\n        onDeleteNote: onDeleteNote,\n        activeNote: activeNote,\n        setNotes: setNotes,\n        setActiveNote: setActiveNote,\n        setTextDisabled: setTextDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteContent, {\n        activeNote: getActiveNote(),\n        onEditNote: onEditNote,\n        test: test,\n        setTest: setTest,\n        textDisabled: textDisabled,\n        setActiveNote: setActiveNote,\n        setNotes: setNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Note, \"N4Ao9ismeL4T6wlgxlUyVAUJgRQ=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["C:/Users/cxr72/Documents/github/meanStack dev/project-client-the-mern-clan/src/components/Note.js"],"names":["React","useState","useEffect","NoteSidebar","NoteContent","uuid","axios","apiService","API_Types_Enum","Note","notes","setNotes","test","setTest","get","then","response","data","sort","a","b","Date","console","log","activeNote","setActiveNote","textDisabled","setTextDisabled","onAddNote","newNote","_id","title","description","date","now","tagData","onDeleteNote","noteId","token","sessionStorage","getItem","config","headers","id","delete","localStorage","setItem","e","onEditNote","editedNote","updatedNotesArray","map","note","getActiveNote","r","find"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\r\nimport '../Note.css';\r\n\r\nimport NoteSidebar from './NoteSidebar' ;\r\nimport NoteContent from './NoteContent';\r\nimport uuid from 'react-uuid';\r\nimport axios from 'axios';\r\nimport apiService from './apiService';\r\nimport { API_Types_Enum } from \"./DataConstants\";\r\n\r\n\r\nconst Note = () => {\r\n\r\n  const [notes,setNotes] = useState([]);\r\n  const [test,setTest] = useState([]);\r\n  useEffect(() => {\r\n\r\n    // apiService(\"https://mern-clan.herokuapp.com/api/note\",\r\n    //   null,\r\n    //   API_Types_Enum.get,\r\n    //   (response) => { response.data.sort((a, b) => new Date(a) < new Date(b) ? 1 : -1);\r\n    //     setNotes(response.data);\r\n    //     setTest(response.data);},\r\n    //   (err) => console.log(err));\r\n\r\n    axios.get('https://mern-clan.herokuapp.com/api/note').then((response) => {\r\n      response.data.sort((a, b) => new Date(a) < new Date(b) ? 1 : -1);\r\n      setNotes(response.data);\r\n      setTest(response.data);\r\n      console.log(response);\r\n    });\r\n    // fetch('https://jsonplaceholder.typicode.com/posts')\r\n    //   .then((response) => response.json())\r\n    //   .then((data) => {\r\n    //     setPosts(data);\r\n    //     console.log(data);\r\n    //   });\r\n  }, []);\r\n  \r\n\r\n  const[activeNote,setActiveNote] = useState(false);\r\n  const[textDisabled,setTextDisabled] = useState(true);\r\n\r\n  const onAddNote = () => {\r\n   \r\n    const newNote = {\r\n\r\n      _id:uuid(),\r\n\r\n      title :\"Title\",\r\n\r\n      description : \"description\",\r\n\r\n      date:Date.now(),\r\n\r\n      tagData:[null],\r\n\r\n    }\r\n\r\n    setNotes([newNote,...notes]);\r\n    //setTest([newNote,...test]);\r\n    console.log(\"Pranay1 printing notes.id\"+ notes._id);\r\n    console.log(\"Pranay1 printing notes.id\"+ notes.title);\r\n    console.log(\"Pranay1 printing notes.id\"+ notes.date);\r\n    console.log(\"Pranay1 printing notes.id\"+ notes.description);\r\n  }\r\n   \r\n  const onDeleteNote = async (noteId) => {\r\n    console.log(\"Sandeep12 printing id\"+ noteId);\r\n    //setNotes(notes.filter((eachNote) => eachNote.id!== note.id ));\r\n    let token = sessionStorage.getItem('token');\r\n        console.log(\"Sandeep printing\"+ token);\r\n        let config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': token,\r\n          },\r\n          data : {\r\n            id:noteId,\r\n          }\r\n        };\r\n\r\n       \r\n        console.log(\"Sandeep1234 printing id\"+ noteId);\r\n        try {\r\n          const response = await axios.delete(\r\n            'https://mern-clan.herokuapp.com/api/note',\r\n            config\r\n          );\r\n          \r\n          localStorage.setItem('token', token);\r\n          console.log(response);\r\n        } catch (e) {\r\n          console.log('error ', e);\r\n        }\r\n        axios.get('https://mern-clan.herokuapp.com/api/note').then((response) => {\r\n          response.data.sort((a, b) => new Date(a) < new Date(b) ? 1 : -1);\r\n          setNotes(response.data);\r\n          \r\n        });\r\n      };\r\n  \r\n\r\n  \r\n  const onEditNote = (editedNote) => {\r\n    const updatedNotesArray = notes.map((note) => {\r\n      if(note._id === editedNote._id){\r\n        return editedNote;\r\n      }\r\n      return note;\r\n    });\r\n    setNotes(updatedNotesArray);\r\n  }\r\n\r\n \r\n   \r\n  const getActiveNote = () => {\r\n    console.log(\"Sandeep\"+activeNote);\r\n    \r\n    const r = notes.find((note) => note._id === activeNote);\r\n  \r\n    console.log(\"Sandeep rabba\"+r);\r\n   return r;\r\n    \r\n  };\r\n   \r\n   return (  <div >\r\n        <div className=\"col-lg-8 mx-auto text-center mt-5\">\r\n        <h1><b>Create a note!</b></h1>  \r\n        </div>\r\n        <div className=\"note\"> \r\n      \r\n          <NoteSidebar notes={notes} onAddNote={onAddNote} \r\n          onDeleteNote={onDeleteNote}\r\n          activeNote = {activeNote}\r\n          setNotes = {setNotes}\r\n          setActiveNote = {setActiveNote}\r\n          setTextDisabled = {setTextDisabled}\r\n          \r\n          />\r\n          \r\n          <NoteContent \r\n          activeNote ={ getActiveNote()} \r\n          onEditNote={onEditNote} \r\n          test={test} \r\n          setTest={setTest}\r\n          textDisabled = {textDisabled}\r\n          setActiveNote = {setActiveNote}  \r\n          setNotes = {setNotes}    \r\n          />   \r\n          <hr />\r\n        </div>  \r\n       \r\n      </div>   );\r\n        }\r\n      \r\n\r\n      \r\n export default Note;\r\n "]},"metadata":{},"sourceType":"module"}